<definitions xmlns="http://www.omg.org/spec/BPMN/20100524/MODEL" 
             xmlns:bpmndi="http://www.omg.org/spec/BPMN/20100524/DI" 
             xmlns:dc="http://www.omg.org/spec/DD/20100524/DC" 
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
             xmlns:flowable="http://flowable.org/bpmn"
             targetNamespace="OrderSagaNamespace">
    <process id="createOrderSaga" name="Create Order Saga" isExecutable="true">
        <startEvent id="startEvent" name="Start Workflow"/>
        <sequenceFlow id="flow1" sourceRef="startEvent" targetRef="sendCreateOrder"/>
        
		<!-- From Start to Order to Inventory -->
        <serviceTask id="sendCreateOrder" name="Send CreateOrder Command" flowable:delegateExpression="${kafkaProducerService}"/>
        <sequenceFlow id="flow2" sourceRef="sendCreateOrder" targetRef="waitForCreateOrderResponse"/>
		<intermediateCatchEvent id="waitForCreateOrderResponse" name="Wait for CreateOrder Response">
			<messageEventDefinition messageRef="OrderInitiated"/>
		</intermediateCatchEvent>
        <sequenceFlow id="flow3" sourceRef="waitForCreateOrderResponse" targetRef="sendReserveInventory"/>
        
		<!-- From Inventory to Payment -->
        <serviceTask id="sendReserveInventory" name="Send ReserveInventory Command" flowable:delegateExpression="${kafkaProducerService}"/>
        <sequenceFlow id="flow4" sourceRef="sendReserveInventory" targetRef="waitForReserveInventoryResponse"/>
        <intermediateCatchEvent id="waitForReserveInventoryResponse" name="Wait for ReserveInventory Response">
            <messageEventDefinition messageRef="InventoryReserved"/>
        </intermediateCatchEvent>
        <sequenceFlow id="flow6" sourceRef="waitForReserveInventoryResponse" targetRef="sendMakePayment"/>
        
        <!--<intermediateCatchEvent id="inventoryReservationFailed" name="Inventory Reservation Failed">
            <messageEventDefinition messageRef="InventoryReservationFailed"/>
        </intermediateCatchEvent>
        <sequenceFlow id="flow7" sourceRef="inventoryReservationFailed" targetRef="endEvent"/>-->
        
		<!-- From Payment to Shipment -->
        <serviceTask id="sendMakePayment" name="Send MakePayment Command" flowable:delegateExpression="${kafkaProducerService}"/>
        <sequenceFlow id="flow8" sourceRef="sendMakePayment" targetRef="waitForMakePaymentResponse"/>
        <intermediateCatchEvent id="waitForMakePaymentResponse" name="Wait for MakePayment Response">
            <messageEventDefinition messageRef="PaymentProcessed"/>
        </intermediateCatchEvent>
        <sequenceFlow id="flow10" sourceRef="waitForMakePaymentResponse" targetRef="sendShipOrder"/>
        
        <!--<intermediateCatchEvent id="paymentFailed" name="Payment Failed">
            <messageEventDefinition messageRef="PaymentFailed"/>
        </intermediateCatchEvent>
        <sequenceFlow id="flow11" sourceRef="paymentFailed" targetRef="sendInventoryCompensation"/>
        
        <serviceTask id="sendInventoryCompensation" name="Send Inventory Compensation" flowable:delegateExpression="${kafkaProducerService}"/>
        <sequenceFlow id="flow12" sourceRef="sendInventoryCompensation" targetRef="endEvent"/>-->
        
		<!-- From Shipment to End -->
        <serviceTask id="sendShipOrder" name="Send ShipOrder Command" flowable:delegateExpression="${kafkaProducerService}"/>
        <sequenceFlow id="flow13" sourceRef="sendShipOrder" targetRef="waitForShipOrderResponse"/>
        
        <intermediateCatchEvent id="waitForShipOrderResponse" name="Wait for ShipOrder Response">
            <messageEventDefinition messageRef="OrderShipped"/>
        </intermediateCatchEvent>
        <sequenceFlow id="flow15" sourceRef="waitForShipOrderResponse" targetRef="endEvent"/>
        
        <!--<intermediateCatchEvent id="orderShipmentFailed" name="Order Shipment Failed">
            <messageEventDefinition messageRef="OrderShipmentFailed"/>
        </intermediateCatchEvent>
        <sequenceFlow id="flow16" sourceRef="orderShipmentFailed" targetRef="sendPaymentCompensation"/>
        
        <serviceTask id="sendPaymentCompensation" name="Send Payment Compensation" flowable:delegateExpression="${kafkaProducerService}"/>
        <sequenceFlow id="flow17" sourceRef="sendPaymentCompensation" targetRef="endEvent"/>-->
        
        <endEvent id="endEvent" name="End Workflow"/>
    </process>

    <message id="OrderInitiated" name="OrderInitiated"/>
    <message id="InventoryReserved" name="InventoryReserved"/>
    <message id="InventoryReservationFailed" name="InventoryReservationFailed"/>
    <message id="PaymentProcessed" name="PaymentProcessed"/>
    <message id="PaymentFailed" name="PaymentFailed"/>
    <message id="OrderShipped" name="OrderShipped"/>
    <message id="OrderShipmentFailed" name="OrderShipmentFailed"/>
</definitions>